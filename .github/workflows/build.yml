name: Build Executable App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        artifact-name: [snake-linux.tar.gz, snake-mac.tar.gz, snake-windows.zip]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Compile with javac
        run: javac snake/Snake.java
      - name: Create executable app
        run: |
          if [[ "$OSTYPE" == "linux-gnu"* ]]; then
            mkdir -p snake/bin
            printf "#!/bin/bash\njava -cp %s snake.Snake\n" "$(pwd)/snake" > snake/bin/run.sh
            chmod +x snake/bin/run.sh
            tar -czvf ${{ matrix.artifact-name }} snake/bin/
          elif [[ "$OSTYPE" == "darwin"* ]]; then
            mkdir -p snake.app/Contents/MacOS
            printf "#!/bin/bash\njava -cp %s snake.Snake\n" "$(pwd)/snake" > snake.app/Contents/MacOS/run.sh
            chmod +x snake.app/Contents/MacOS/run.sh
            tar -czvf ${{ matrix.artifact-name }} snake.app/
          elif [[ "$OSTYPE" == "msys"* ]]; then
            mkdir -p snake/bin
            printf "@echo off\njava -cp \"%s\" snake.Snake\n" "%CD%\snake" > snake/bin/run.bat
            tar -czvf ${{ matrix.artifact-name }} snake/bin/
          fi
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}
